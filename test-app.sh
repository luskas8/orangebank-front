#!/bin/bash

echo "üß™ Testando funcionalidades do OrangeBank..."

# Testa se o servidor est√° rodando
echo "üì° Verificando se o servidor est√° ativo..."
if curl -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Servidor est√° rodando em http://localhost:3000"
else
    echo "‚ùå Servidor n√£o est√° acess√≠vel"
    exit 1
fi

# Testa se a API externa est√° acess√≠vel
echo "üîó Verificando API externa..."
if curl -s http://localhost:3003/health > /dev/null; then
    echo "‚úÖ API externa est√° acess√≠vel"
else
    echo "‚ö†Ô∏è  API externa pode n√£o estar rodando (localhost:3003)"
fi

# Verifica as rotas principais
echo "üõ£Ô∏è  Testando rotas..."

# Testa rota de login
if curl -s http://localhost:3000/login > /dev/null; then
    echo "‚úÖ Rota /login acess√≠vel"
else
    echo "‚ùå Problema na rota /login"
fi

# Testa rota de dashboard
if curl -s http://localhost:3000/dashboard > /dev/null; then
    echo "‚úÖ Rota /dashboard acess√≠vel"
else
    echo "‚ùå Problema na rota /dashboard"
fi

# Testa API interna de login
echo "üîê Testando API de login..."
LOGIN_RESPONSE=$(curl -s -w "%{http_code}" -o /dev/null -X POST http://localhost:3000/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"email":"joao.silva@email.com","password":"orangebank123@"}')

if [ "$LOGIN_RESPONSE" = "200" ] || [ "$LOGIN_RESPONSE" = "401" ]; then
    echo "‚úÖ API de login est√° respondendo (status: $LOGIN_RESPONSE)"
else
    echo "‚ùå Problema na API de login (status: $LOGIN_RESPONSE)"
fi

echo "üéâ Teste conclu√≠do!"
